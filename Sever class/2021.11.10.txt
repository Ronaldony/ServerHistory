캐시 메모리 (2021.11.08 이어서)
 1. 단일 캐시 메모리가 커지는 경우 n-way에 대한 방법도 고려해야한다. (Page의 크기와 TLB의 변환 주소 Index+offset)
 
시간
 1. ClockRes: 시스템 모니터링에 필요한 프로그램을 제공하는 Tool. 타이머 인터럽트 주기에 대한 정보를 제공한다.
 2. 관련 함수
	1)clock(): 해당 프로세스가 시작한 이후의 시간 반환. 0번 타이머 인터럽트의 Current  주기를 사용한다.
	2)GetTickCount(): 시스템(OS)가 시작한 이후의 시간을 반환한다. 반환 값인 DWORD 4byte의 크기가 mSec로 계산하면 49.7일까지가 범위만큼 측정한다.(대안으로 GetTickCount64()가 있음) 0번 타이머 인터럽트의 Maximum 주기를 사용한다.
	3) timeGetTime(): GetTickCount()와 같이 OS 시작 이후 시간을 반환한다. 차이점은 반환값이 0번 타이머 인터럽트 Current 주기를 해상도로 한다는 것이다. (#pragma comment("Winmm.lib")로 lib를 링크 시 첨부 할 수 있다)
	4) Sleep(): 쓰레드를 일정시간 Blocked 상태로 이동시킨다. (0번 타이머 인터럽트 Current 주기를 해상도로 함)
	5) 0번 타이머 인터럽트 기준 시간 함수: GetTickCount(), timeGetTime(), Sleep(), 스케줄러 기능, NtSetTimerResolution(), QueryInterruptTimePrecise()
	=> timeBeginPeriod(), timeEndPeriod(): 0번 타이머 인터럽트의 주기(Maximum Default: 15.625ms)를 변경하는 함수. 프로그램 시작 시 timeBeginPeriod(1)을 세팅하고 시작하는 것을 권장
 3. 고해상도의 타이머를 쓰기위해서는 CPU 클럭을 사용하는 함수를 사용하여야 한다.
 4. 시간과 관련된 함수는 적재적소에 맞게 사용하여야 한다.
5. 이외 QueryPerformanceCounter 함수로 1us 단위의 시간을 측정할 수 있다.

멀티 스레드
 1. 비순차적 명령어 처리(CPU Allocation Queue와 관련) -> 새로운 오류 발생, 입력된 명령에 대해서 CPU 내부에서 명령 처리는 비 순차적이지만 결과를 출력하는 순서는 순차적이다.
 2. Reorder Buffer 

포트폴리오
 1. 프로젝트(코드)에 대한 테스트 결과를 보여줘야 검증이 됨

질문
1. 0번 타이머 인터럽트 주기를 1ms라면 스케줄러 타임 슬라이스가 1ms인가? 그런데 다른 프로그램도 돌아가고 있는데 어떻게 1ms씩 반환을 하는가?
2. 타이머 인터럽트는 코어들끼리 공유하는 자원인가?