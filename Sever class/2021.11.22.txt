개발 툴 활용
 1. 개발 과정에서 필요한 간단한 동작의 툴은 자체 제작한다.
	ex) 맵에서 전투지역, 이동 가능지역, 불가지역 등의 표시를 위한 툴 제작
 2. 이미지 파일 활용은 AI 봇의 이동 경로, 이동 가능 지역 등으로 활용할 수 있다.
 
파일 패킹(압축 x)
 1. 헤더 설계
	1) 1번 방법 - 각 파일의 정보의 앞단에 헤더 저장
		(1) 헤더는 고정길이를 갖게 설계해야 효과적이다.
		(2) 각 파일의 앞단에 헤더를 저장한다. 헤더에는 FileName과 File의 최대 크기, 파일의 실제 크기로 구성한다.
		(*) 단점: 특정 파일만 골라서 압축푸는 것이 어렵다.
	2) 2번 방법 - 모든 파일의 헤더 정보를 최상단에 저장
		(1) 1번 방법의 단점을 보완한다.
		(2) 패킹 자체 파일에 대한 헤더를 추가해야 한다. 패킹 파일이라는 마커와 패킹된 파일의 개수 정보 헤더를 추가한다.
		(3) 모든 패킹된 파일에 대한 헤더에 각 파일의 위치 Offset을 추가한다.
		(4) 특정 파일의 증감시 패킹 조정 방법
			(4-1) 감소(혹은 삭제): 삭제된 파일에 대한 헤더를 수정한다.
			(4-2) 증가: offset을 맨 뒤로 갱신
		(5) 패킹 자체 파일의 빈 공간

게임 서버
 1. Stateful
	1) 클라이언트들이 네트워크에 접속된 상태에서 서버 메모리에서 Logic 처리가 되는 것.
	2) FPS의 경우 P2P 방식의 게임이다.
	3) 서버에서 로직처리를 하기 때문에 핵이 없다. (이말인 즉슨 결과는 서버만이 만든다.)
 2. Stateless
	1) 클라이언트가 요청 -> Server가 DB에 Logic에대한 결과 요청 -> DB가 서버에 결과 전달 -> 클라이언트에 결과 전달
	2) 
*. Scale out(수평적 확장): 서버의 수를 늘려 동접자 수를 늘리는 것(stateless 성능 향상 방법)
   Scale up(수직적 확장): 하나의 서버의 성능을 높이는 것(stateful 성능 향상 방법)
**. 듀랑고는 Stateless로 MMORPG를 구현하려다 유지비 문제를 발생시켜 망했다.

 
 
 

*1. RPG에서 타겟 등의 높이에 대한 처리는 없앴다. 높이는 3차원 배열 처리가 이루어져야 하는데 성능이 나오지 않는다.
*2. AI 봇은 way point를 정하여 이동시켜야 한다. 이전에 이동했던 경로를 기억하고 있어야 자연스러운 연출이 가능하다.
*3. 도서: WIN32 오픈소스 라이브러리
NTFS84

